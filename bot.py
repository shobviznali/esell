import telebot
import os
from dotenv import load_dotenv
from woocommerce import API
import openai

# –ó–∞–≥—Ä—É–∂–∞–µ–º .env
load_dotenv()

BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
WC_URL = os.getenv("WOOCOMMERCE_URL")
WC_KEY = os.getenv("WOOCOMMERCE_CONSUMER_KEY")
WC_SECRET = os.getenv("WOOCOMMERCE_CONSUMER_SECRET")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

if not all([BOT_TOKEN, WC_URL, WC_KEY, WC_SECRET, OPENAI_API_KEY]):
    raise ValueError("–û–¥–Ω–∞ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.")

bot = telebot.TeleBot(BOT_TOKEN)
openai.api_key = OPENAI_API_KEY

# WooCommerce API
wcapi = API(
    url=WC_URL,
    consumer_key=WC_KEY,
    consumer_secret=WC_SECRET,
    version="wc/v3"
)

# –¢—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏—è
transliteration_map = {
    'sh': ['’∑'], 'ch': ['’π', '’≥'], 'zh': ['’™'], 'ts': ['÷Å', '’Æ'], 'gh': ['’≤'],
    'kh': ['’≠'], 'ye': ['’•'], 'vo': ['’∏'], 'ev': ['÷á'],
    'a': ['’°'], 'b': ['’¢'], 'g': ['’£'], 'd': ['’§'], 'e': ['’•', '’ß'], 'z': ['’¶'],
    't': ['’ø', '’©'], 'i': ['’´'], 'l': ['’¨'], 'k': ['’Ø', '÷Ñ'], 'h': ['’∞'],
    'j': ['’ª'], 'x': ['’≠', '’≤'], 'c': ['÷Å', '÷Ñ', '’Æ'], 'm': ['’¥'],
    'y': ['’µ'], 'n': ['’∂'], 'o': ['÷Ö', '’∏'], 'p': ['’∫', '÷É'],
    'r': ['÷Ä', '’º'], 's': ['’Ω'], 'v': ['’æ'], 'u': ['’∏÷Ç'], 'f': ['÷Ü'], 'q': ['÷Ñ']
}

reverse_map = {
    '’°': 'a', '’¢': 'b', '’£': 'g', '’§': 'd', '’•': 'e', '’ß': 'e', '’¶': 'z',
    '’ø': 't', '’©': 't', '’´': 'i', '’¨': 'l', '’≠': 'kh', '’Ø': 'k', '÷Ñ': 'k',
    '’∞': 'h', '’±': 'dz', '’™': 'zh', '’ª': 'j', '’∑': 'sh', '’π': 'ch', '’≥': 'ch',
    '’≤': 'gh', '÷Å': 'ts', '’Æ': 'ts', '’¥': 'm', '’µ': 'y', '’∂': 'n',
    '÷Ö': 'o', '’∏': 'vo', '’∫': 'p', '÷É': 'p', '÷Ä': 'r', '’º': 'r',
    '’Ω': 's', '’æ': 'v', '’∏÷Ç': 'u', '÷Ü': 'f', '÷á': 'ev'
}


def transliterate_to_armenian(text):
    text = text.lower()
    result = ''
    i = 0
    while i < len(text):
        for length in [3, 2, 1]:
            fragment = text[i:i + length]
            if fragment in transliteration_map:
                result += transliteration_map[fragment][0]
                i += length
                break
        else:
            result += text[i]
            i += 1
    return result


def transliterate_to_english(text):
    result = ''
    i = 0
    while i < len(text):
        if text[i:i + 2] == '’∏÷Ç':
            result += 'u'
            i += 2
        else:
            result += reverse_map.get(text[i], text[i])
            i += 1
    return result


def search_product(product_name):
    try:
        response = wcapi.get("products", params={"search": product_name})
        response.raise_for_status()
    except Exception as e:
        print(f"[WooCommerce Error] {e}")
        return "’ç’≠’°’¨ ’ø’•’≤’´ ’∏÷Ç’∂’•÷Å’°’æ ’°’∫÷Ä’°’∂÷Ñ’∂’•÷Ä’® ’∏÷Ä’∏’∂’•’¨’´’Ω üòï", []

    data = response.json()
    if not data:
        return f"’è’æ’µ’°’¨ ’°’∫÷Ä’°’∂÷Ñ’® `{product_name}` ’π’´ ’£’ø’∂’æ’•’¨ üòï", []

    items = []
    for product in data[:3]:
        items.append({
            "name": product["name"],
            "price": product.get("price", "’π’´ ’∂’∑’æ’°’Æ"),
            "link": product.get("permalink", "")
        })
    return None, items


def extract_product_name(user_input):
    prompt = f"""
‘¥’∏÷Ç ’°÷Ä’∞’•’Ω’ø’°’Ø’°’∂ ’¢’°’∂’°’Ø’°’∂’∏÷Ç’©’µ’∏÷Ç’∂ ’•’Ω, ’∏÷Ä’® ÷Ö’£’∂’∏÷Ç’¥ ’ß ’§’∏÷Ç÷Ä’Ω ’¢’•÷Ä’•’¨ ’°’∫÷Ä’°’∂÷Ñ’´ ’°’∂’∏÷Ç’∂’® ’∞’°’≥’°’≠’∏÷Ä’§’´ ’∂’°’¥’°’Ø’´÷Å÷â
’Ü’°’¥’°’Ø’®: "{user_input}"

–û—Ç–≤–µ—Ç—å —Ç–æ–ª—å–∫–æ –Ω–∞–∑–≤–∞–Ω–∏–µ–º —Ç–æ–≤–∞—Ä–∞, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç–µ. 
–ù–µ –¥–æ–±–∞–≤–ª—è–π –Ω–∏—á–µ–≥–æ –ª–∏—à–Ω–µ–≥–æ, —Ç–æ–ª—å–∫–æ –Ω–∞–∑–≤–∞–Ω–∏–µ.
"""
    try:
        response = openai.ChatCompletion.create(
            model="gpt-4o-mini",
            messages=[{"role": "user", "content": prompt}],
            temperature=0.2,
        )
        extracted_name = response.choices[0].message.content.strip()
    except Exception as e:
        print(f"[OpenAI Error] {e}")
        return user_input, transliterate_to_armenian(user_input)

    armenian_name = transliterate_to_armenian(extracted_name)
    print(f"[GPT Extracted] '{extracted_name}' ‚Üí [Armenian] '{armenian_name}'")
    return extracted_name, armenian_name


def generate_gpt_response(user_question, products):
    product_info = "\n".join([
        f"{p['name']} ‚Äî {p['price']} ’§÷Ä’°’¥ ‚Äî {p['link']}"
        for p in products
    ])

    prompt = f"""
‘¥’∏÷Ç ’≠’°’∂’∏÷Ç’©’´ ÷Ö’∂’¨’°’µ’∂ ’Ø’∏’∂’Ω’∏÷Ç’¨’ø’°’∂’ø ’•’Ω÷â ‘±’∞’° ’©’• ’´’∂’π ’ß ’∞’°÷Ä÷Å÷Ä’•’¨ ’∞’°’≥’°’≠’∏÷Ä’§’®’ù "{user_question}"

‘±’∞’° ’©’• ’´’∂’π ’•’∂÷Ñ ’£’ø’•’¨
{product_info}

’ä’°’ø’°’Ω’≠’°’∂’´÷Ä ’¢’°÷Ä’•’∞’°’¥’¢’∏÷Ç’µ’©, ’°’Ω’•’Ω ’©’• ’§’∏÷Ç ’Ø’∏’∂’Ω’∏÷Ç’¨’ø’°’∂’ø ’•’Ω ÷á ’°’º’°’ª’°÷Ä’Ø’´÷Ä ’°’∫÷Ä’°’∂÷Ñ’∂’•÷Ä’®÷â ‘±’º’°’∂÷Å ’°’æ’•’¨’∏÷Ä’§ ’´’∂÷Ü’∏÷Ä’¥’°÷Å’´’°’µ’´÷â ’à÷Ç’≤’°÷Ä’Ø’´÷Ä ’∞’≤’∏÷Ç’¥’∂’•÷Ä’®÷â ’é’•÷Ä’ª’∏÷Ç’¥ ’¥’´’°’µ’∂ ’∂’∑’´÷Ä’ù ’∏÷Ç’∂’´ ’°÷Ä’§’µ’∏÷Ñ ’°’µ’¨ ’∞’°÷Ä÷Å’•÷Ä ’∞’°’≥’°’≠’∏÷Ä’§’®÷â
"""
    try:
        response = openai.ChatCompletion.create(
            model="gpt-4o-mini",
            messages=[{"role": "user", "content": prompt}],
            temperature=0.6,
        )
        return response.choices[0].message.content
    except Exception as e:
        print(f"[OpenAI Error] {e}")
        return "’ç’≠’°’¨ ’ø’•’≤’´ ’∏÷Ç’∂’•÷Å’°’æ ’∫’°’ø’°’Ω’≠’°’∂’® ’Ø’°’¶’¥’•’¨’´’Ω üòï"


start_message = "’à’≤’ª’∏÷Ç’µ’∂÷â ‘µ’Ω MR Market-’´ ÷Ö’∂’¨’°’µ’∂ ’≠’∏÷Ä’∞÷Ä’§’°’ø’∏÷Ç’∂ ’•’¥÷â ‘µ’Ω ’Ø÷Ö’£’∂’•’¥ ’Å’•’¶ ’°÷Ä’°’£ ’£’ø’∂’•’¨ ÷Å’°’∂’Ø’°’¨’´ ’°’∫÷Ä’°’∂÷Ñ’®÷â"


@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, start_message)


@bot.message_handler(func=lambda message: True)
def handle_message(message):
    user_query = message.text.strip()
    extracted_name, armenian_name = extract_product_name(user_query)
    error, results = search_product(armenian_name)

    if error:
        bot.send_message(message.chat.id, error)
        return

    gpt_reply = generate_gpt_response(user_query, results)
    bot.send_message(message.chat.id, gpt_reply, parse_mode='Markdown')

    link = f"https://mrmarket.am/?s={armenian_name}&post_type=product"
    bot.send_message(message.chat.id, f"‘±’µ’¨ ’°÷Ä’§’µ’∏÷Ç’∂÷Ñ’∂’•÷Ä’´ ’∞’°’¥’°÷Ä ’°’∂÷Å’•÷Ñ ’∞’•’ø÷á’µ’°’¨ ’∞’≤’∏÷Ç’¥’∏’æ {link}")


print("‘≤’∏’ø’® ’∞’°’ª’∏’≤’∏÷Ç’©’µ’°’¥’¢ ’£’∏÷Ä’Æ’°÷Ä’Ø’æ’•’¨ ’ß÷â")
bot.polling()
